{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\pages\\\\movies_tvs\\\\Filter.js\";\nimport React, { Component, useState, useRef } from \"react\";\nimport style from \"./movies_tvs.module.css\";\nimport axios from \"axios\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nconst Select = React.forwardRef((props, ref) => {\n  const {\n    placeholder,\n    type\n  } = props;\n  return React.createElement(\"select\", {\n    onChange: e => {\n      props.onChangeGenre(e.target.value);\n    },\n    ref: ref,\n    className: style[\"select\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"All\",\n    disabled: true,\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, placeholder), React.createElement(\"option\", {\n    value: \"All\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"All\"), type === \"genre\" ? props.options.map(op => React.createElement(\"option\", {\n    key: op.id,\n    value: op.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, op.name)) : props.options.map((op, i) => React.createElement(\"option\", {\n    key: i,\n    value: op,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, op)));\n});\n\nconst InputSelect = props => {\n  const {\n    type,\n    options,\n    placeholder,\n    onChange\n  } = props;\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const input = useRef();\n  const optionContainer = useRef();\n  const option = useRef();\n\n  const onChangeInput = e => {\n    setSelectedOption(e.target.value);\n  };\n\n  const onClickInput = () => {\n    optionContainer.current.style.display = \"block\";\n  };\n\n  const onClickOption = e => {\n    let textContent = e.target.textContent;\n    onChange(textContent);\n    optionContainer.current.style.display = \"none\";\n    input.current.value = textContent;\n  };\n\n  return React.createElement(\"div\", {\n    className: style[\"input-select\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: input,\n    placeholder: placeholder,\n    className: style.select,\n    onClick: onClickInput,\n    onChange: onChangeInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(ArrowDropDownIcon, {\n    className: style[\"arrow-down\"],\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: optionContainer,\n    className: style[\"input-select-options\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, options.filter(op => type === \"genre\" ? String(op.name).includes(selectedOption) : op.includes(selectedOption)).map(op => type === \"genre\" ? React.createElement(\"span\", {\n    ref: option,\n    onClick: e => onClickOption(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, op.name) : React.createElement(\"span\", {\n    ref: option,\n    onClick: e => onClickOption(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, op)))));\n};\n\nexport class Filter extends Component {\n  constructor(props) {\n    super(props);\n    let date = new Date();\n    let currentYear = date.getFullYear();\n    let years = [\"All\"];\n\n    for (let i = 0; i < 10; i++) {\n      years.push(String(currentYear - i));\n    }\n\n    this.state = {\n      years: [...years],\n      genres: [\"All\"],\n      sortBy: [\"Latest\", \"Oldest\"]\n    };\n    this.genre = React.createRef();\n    this.selectContainer = React.createRef();\n  }\n\n  async componentDidMount() {\n    const {\n      apiKey\n    } = this.props;\n    await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`).then(res => this.setState(() => {\n      return {\n        genres: [...res.data.genres]\n      };\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      onChangeGenre,\n      onChangeYear\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: style.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.inputContainer,\n      className: style[\"input-container\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => this.props.onSearch(e),\n      type: \"text\",\n      placeholder: \"Keyword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: this.selectContainer,\n      className: style[\"select-container\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(InputSelect, {\n      type: \"year\",\n      options: this.state.years,\n      placeholder: \"Year\",\n      onChange: onChangeYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(InputSelect, {\n      ref: this.genre,\n      onChange: onChangeGenre,\n      placeholder: \"Genre\",\n      type: \"genre\",\n      options: this.state.genres,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Select, {\n      placeholder: \"Sort by\",\n      type: \"sort\",\n      options: this.state.sortBy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Filter;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/pages/movies_tvs/Filter.js"],"names":["React","Component","useState","useRef","style","axios","ArrowDropDownIcon","Select","forwardRef","props","ref","placeholder","type","e","onChangeGenre","target","value","options","map","op","id","name","i","InputSelect","onChange","selectedOption","setSelectedOption","input","optionContainer","option","onChangeInput","onClickInput","current","display","onClickOption","textContent","select","filter","String","includes","Filter","constructor","date","Date","currentYear","getFullYear","years","push","state","genres","sortBy","genre","createRef","selectContainer","componentDidMount","apiKey","get","then","res","setState","data","catch","err","console","log","render","onChangeYear","inputContainer","onSearch"],"mappings":"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","sourcesContent":["import React, { Component, useState, useRef } from \"react\";\r\nimport style from \"./movies_tvs.module.css\";\r\nimport axios from \"axios\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nconst Select = React.forwardRef((props, ref) => {\r\n  const { placeholder, type } = props;\r\n  return (\r\n    <select\r\n      onChange={e => {\r\n        props.onChangeGenre(e.target.value);\r\n      }}\r\n      ref={ref}\r\n      className={style[\"select\"]}\r\n    >\r\n      <option value=\"All\" disabled selected>\r\n        {placeholder}\r\n      </option>\r\n      <option value=\"All\">All</option>\r\n\r\n      {type === \"genre\"\r\n        ? props.options.map(op => (\r\n            <option key={op.id} value={op.id}>\r\n              {op.name}\r\n            </option>\r\n          ))\r\n        : props.options.map((op, i) => (\r\n            <option key={i} value={op}>\r\n              {op}\r\n            </option>\r\n          ))}\r\n    </select>\r\n  );\r\n});\r\n\r\nconst InputSelect = props => {\r\n  const { type, options, placeholder, onChange } = props;\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n\r\n  const input = useRef();\r\n  const optionContainer = useRef();\r\n  const option = useRef();\r\n\r\n  const onChangeInput = e => {\r\n    setSelectedOption(e.target.value);\r\n  };\r\n\r\n  const onClickInput = () => {\r\n    optionContainer.current.style.display = \"block\";\r\n  };\r\n\r\n  const onClickOption = e => {\r\n    let textContent = e.target.textContent;\r\n    onChange(textContent);\r\n\r\n    optionContainer.current.style.display = \"none\";\r\n    input.current.value = textContent;\r\n  };\r\n\r\n  return (\r\n    <div className={style[\"input-select\"]}>\r\n      <input\r\n        ref={input}\r\n        placeholder={placeholder}\r\n        className={style.select}\r\n        onClick={onClickInput}\r\n        onChange={onChangeInput}\r\n      />\r\n      <ArrowDropDownIcon className={style[\"arrow-down\"]} fontSize=\"large\" />\r\n      <div>\r\n        <div ref={optionContainer} className={style[\"input-select-options\"]}>\r\n          {options\r\n            .filter(op =>\r\n              type === \"genre\"\r\n                ? String(op.name).includes(selectedOption)\r\n                : op.includes(selectedOption)\r\n            )\r\n            .map(op =>\r\n              type === \"genre\" ? (\r\n                <span ref={option} onClick={e => onClickOption(e)}>\r\n                  {op.name}\r\n                </span>\r\n              ) : (\r\n                <span ref={option} onClick={e => onClickOption(e)}>\r\n                  {op}\r\n                </span>\r\n              )\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class Filter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let date = new Date();\r\n    let currentYear = date.getFullYear();\r\n    let years = [\"All\"];\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      years.push(String(currentYear - i));\r\n    }\r\n\r\n    this.state = {\r\n      years: [...years],\r\n      genres: [\"All\"],\r\n      sortBy: [\"Latest\", \"Oldest\"]\r\n    };\r\n\r\n    this.genre = React.createRef();\r\n    this.selectContainer = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { apiKey } = this.props;\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`\r\n      )\r\n      .then(res =>\r\n        this.setState(() => {\r\n          return {\r\n            genres: [...res.data.genres]\r\n          };\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { onChangeGenre, onChangeYear } = this.props;\r\n\r\n    return (\r\n      <div className={style.filter}>\r\n        <div ref={this.inputContainer} className={style[\"input-container\"]}>\r\n          <input\r\n            onChange={e => this.props.onSearch(e)}\r\n            type=\"text\"\r\n            placeholder=\"Keyword\"\r\n          />\r\n        </div>\r\n        <div ref={this.selectContainer} className={style[\"select-container\"]}>\r\n          <InputSelect\r\n            type=\"year\"\r\n            options={this.state.years}\r\n            placeholder=\"Year\"\r\n            onChange={onChangeYear}\r\n          />\r\n\r\n          {/* <Select\r\n            ref={this.genre}\r\n            onChangeGenre={onChangeGenre}\r\n            placeholder=\"Genre\"\r\n            type=\"genre\"\r\n            options={this.state.genres}\r\n          /> */}\r\n\r\n          <InputSelect\r\n            ref={this.genre}\r\n            onChange={onChangeGenre}\r\n            placeholder=\"Genre\"\r\n            type=\"genre\"\r\n            options={this.state.genres}\r\n          />\r\n\r\n          <Select\r\n            placeholder=\"Sort by\"\r\n            type=\"sort\"\r\n            options={this.state.sortBy}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}