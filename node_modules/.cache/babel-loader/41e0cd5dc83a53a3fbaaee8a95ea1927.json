{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\pages\\\\tv\\\\Tv.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport style from \"../../movie_tv_components/movie_tv.module.css\";\nimport Overview from \"../../movie_tv_components/Overview\";\nimport Title from \"../../globalComponents/Title\";\nimport Seasons from \"../../movie_tv_components/Seasons\";\nimport Videos from \"../../movie_tv_components/Videos\";\nimport Picture from \"../../movie_tv_components/Picture\";\nimport Cast from \"../../movie_tv_components/Cast\";\nimport List from \"../../globalComponents/List\";\nimport Copyright from \"../../globalComponents/Copyright\";\nimport PictureModal from \"../../globalComponents/PictureModal\";\nimport CastModal from \"../../globalComponents/CastModal\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst SeasonModal = React.forwardRef((props, ref) => {\n  const closeModal = () => {\n    ref.background.current.style.visibility = \"hidden\";\n    ref.background.current.style.opacity = \"0\";\n    ref.background.current.style.transition = \"all 200ms ease-in\";\n    ref.modal.current.style.visibility = \"hidden\";\n    ref.modal.current.style.opacity = \"0\";\n    ref.modal.current.style.transition = \"all 200ms ease-in\";\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: ref.background,\n    className: style[\"season-modal-background\"],\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: ref.modal,\n    className: style[\"season-modal\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    className: style.closeIcon,\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Title, {\n    titleName: `Season`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), props.episodes && props.episodes.map(ep => React.createElement(\"div\", {\n    className: style.episode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w300/${ep.still_path}`,\n    alt: \"still image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginLeft: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: style[\"episode-name\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, ep.name), React.createElement(\"span\", {\n    className: style[\"episode-num\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Episode \", ep.episode_number), React.createElement(\"span\", {\n    className: style[\"episode-overview\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ep.overview))))));\n});\n\nclass Tv extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.tvID = () => {\n      const {\n        tvID\n      } = this.props.match.params;\n      return tvID;\n    };\n\n    this.state = {\n      apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\n      tvID: this.tvID(),\n      details: {},\n      seasonEpisodes: [],\n      posters: [],\n      backdrops: [],\n      cast: [],\n      crew: []\n    };\n\n    this.setImages = (posters, backdrops) => {\n      this.setState(() => {\n        return {\n          posters: [...posters],\n          backdrops: [...backdrops]\n        };\n      });\n    };\n\n    this.setCast = (cast, crew) => {\n      this.setState(() => {\n        return {\n          cast: [...cast],\n          crew: [...crew]\n        };\n      });\n    };\n\n    this.setModalVisible = ref => {\n      ref.background.current.style.visibility = \"visible\";\n      ref.background.current.style.opacity = \"1\";\n      ref.background.current.style.transition = \"all 200ms ease-in\";\n      ref.modal.current.style.visibility = \"visible\";\n      ref.modal.current.style.opacity = \"1\";\n      ref.modal.current.style.transition = \"all 200ms ease-in\";\n    };\n\n    this.openPictureModal = () => {\n      this.setModalVisible({\n        background: this.pictureModalBackground,\n        modal: this.pictureModal\n      });\n    };\n\n    this.openCastModal = () => {\n      this.setModalVisible({\n        background: this.castModalBackground,\n        modal: this.castModal\n      });\n    };\n\n    this.openSeasonModal = async seasonNum => {\n      this.setModalVisible({\n        background: this.seasonModalBackground,\n        modal: this.seasonModal\n      });\n      const {\n        apiKey,\n        tvID\n      } = this.state;\n      await axios.get(`https://api.themoviedb.org/3/tv/${tvID}/season/${seasonNum}?api_key=${apiKey}&language=en-US`).then(res => {\n        this.setState(() => {\n          return {\n            seasonEpisodes: res.data.episodes\n          };\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      apiKey,\n      tvID\n    } = this.state;\n    this.pictureModalBackground = React.createRef();\n    this.pictureModal = React.createRef();\n    this.castModalBackground = React.createRef();\n    this.castModal = React.createRef();\n    this.seasonModalBackground = React.createRef();\n    this.seasonModal = React.createRef();\n    await axios.get(`https://api.themoviedb.org/3/tv/${tvID}?api_key=${apiKey}&language=en-US`).then(res => {\n      this.setState(() => {\n        return {\n          details: res.data\n        };\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1.2fr 8fr 1.2fr\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(PictureModal, {\n      ref: {\n        firstRef: this.pictureModalBackground,\n        secondRef: this.pictureModal\n      },\n      posters: this.state.posters,\n      backdrops: this.state.backdrops,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(CastModal, {\n      ref: {\n        background: this.castModalBackground,\n        modal: this.castModal\n      },\n      cast: this.state.cast,\n      crew: this.state.crew,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(SeasonModal, {\n      ref: {\n        background: this.seasonModalBackground,\n        modal: this.seasonModal\n      },\n      episodes: this.state.seasonEpisodes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Overview, {\n      details: this.state.details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: \"Seasons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Seasons, {\n      seriesName: this.state.details.name,\n      seasons: this.state.details.seasons,\n      open: this.openSeasonModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: \"Videos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Videos, {\n      isMovie: false,\n      apiKey: this.state.apiKey,\n      itemID: this.state.tvID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: \"Pictures\",\n      more: true,\n      onClickViewAll: this.openPictureModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(Picture, {\n      isMovie: false,\n      itemID: this.state.tvID,\n      apiKey: this.state.apiKey,\n      setImages: this.setImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: \"Cast\",\n      more: true,\n      onClickViewAll: this.openCastModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Cast, {\n      isMovie: false,\n      apiKey: this.state.apiKey,\n      itemID: this.state.tvID,\n      setCast: this.setCast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: \"Similar tv shows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(List, {\n      api: `https://api.themoviedb.org/3/tv/${this.state.tvID}/similar?api_key=${this.state.apiKey}&language=en-US&page=1`,\n      isMovie: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(Copyright, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tv;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/pages/tv/Tv.js"],"names":["React","axios","style","Overview","Title","Seasons","Videos","Picture","Cast","List","Copyright","PictureModal","CastModal","CloseIcon","SeasonModal","forwardRef","props","ref","closeModal","background","current","visibility","opacity","transition","modal","closeIcon","episodes","map","ep","episode","still_path","display","flexDirection","marginLeft","name","episode_number","overview","Tv","Component","tvID","match","params","state","apiKey","details","seasonEpisodes","posters","backdrops","cast","crew","setImages","setState","setCast","setModalVisible","openPictureModal","pictureModalBackground","pictureModal","openCastModal","castModalBackground","castModal","openSeasonModal","seasonNum","seasonModalBackground","seasonModal","get","then","res","data","catch","err","console","log","componentDidMount","createRef","render","gridTemplateColumns","firstRef","secondRef","seasons"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport style from \"../../movie_tv_components/movie_tv.module.css\";\r\nimport Overview from \"../../movie_tv_components/Overview\";\r\nimport Title from \"../../globalComponents/Title\";\r\nimport Seasons from \"../../movie_tv_components/Seasons\";\r\nimport Videos from \"../../movie_tv_components/Videos\";\r\nimport Picture from \"../../movie_tv_components/Picture\";\r\nimport Cast from \"../../movie_tv_components/Cast\";\r\nimport List from \"../../globalComponents/List\";\r\nimport Copyright from \"../../globalComponents/Copyright\";\r\nimport PictureModal from \"../../globalComponents/PictureModal\";\r\nimport CastModal from \"../../globalComponents/CastModal\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst SeasonModal = React.forwardRef((props, ref) => {\r\n  const closeModal = () => {\r\n    ref.background.current.style.visibility = \"hidden\";\r\n    ref.background.current.style.opacity = \"0\";\r\n    ref.background.current.style.transition = \"all 200ms ease-in\";\r\n\r\n    ref.modal.current.style.visibility = \"hidden\";\r\n    ref.modal.current.style.opacity = \"0\";\r\n    ref.modal.current.style.transition = \"all 200ms ease-in\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={ref.background}\r\n        className={style[\"season-modal-background\"]}\r\n        onClick={closeModal}\r\n      ></div>\r\n      <div ref={ref.modal} className={style[\"season-modal\"]}>\r\n        <CloseIcon className={style.closeIcon} onClick={closeModal} />\r\n        <Title titleName={`Season`} />\r\n        {props.episodes &&\r\n          props.episodes.map(ep => (\r\n            <div className={style.episode}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300/${ep.still_path}`}\r\n                alt=\"still image\"\r\n              />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  marginLeft: \"1em\"\r\n                }}\r\n              >\r\n                <span className={style[\"episode-name\"]}>{ep.name}</span>\r\n                <span className={style[\"episode-num\"]}>\r\n                  Episode {ep.episode_number}\r\n                </span>\r\n                <span className={style[\"episode-overview\"]}>{ep.overview}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nclass Tv extends React.Component {\r\n  tvID = () => {\r\n    const { tvID } = this.props.match.params;\r\n    return tvID;\r\n  };\r\n\r\n  state = {\r\n    apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\r\n    tvID: this.tvID(),\r\n    details: {},\r\n    seasonEpisodes: [],\r\n    posters: [],\r\n    backdrops: [],\r\n    cast: [],\r\n    crew: []\r\n  };\r\n\r\n  setImages = (posters, backdrops) => {\r\n    this.setState(() => {\r\n      return {\r\n        posters: [...posters],\r\n        backdrops: [...backdrops]\r\n      };\r\n    });\r\n  };\r\n\r\n  setCast = (cast, crew) => {\r\n    this.setState(() => {\r\n      return {\r\n        cast: [...cast],\r\n        crew: [...crew]\r\n      };\r\n    });\r\n  };\r\n\r\n  setModalVisible = ref => {\r\n    ref.background.current.style.visibility = \"visible\";\r\n    ref.background.current.style.opacity = \"1\";\r\n    ref.background.current.style.transition = \"all 200ms ease-in\";\r\n\r\n    ref.modal.current.style.visibility = \"visible\";\r\n    ref.modal.current.style.opacity = \"1\";\r\n    ref.modal.current.style.transition = \"all 200ms ease-in\";\r\n  };\r\n\r\n  openPictureModal = () => {\r\n    this.setModalVisible({\r\n      background: this.pictureModalBackground,\r\n      modal: this.pictureModal\r\n    });\r\n  };\r\n\r\n  openCastModal = () => {\r\n    this.setModalVisible({\r\n      background: this.castModalBackground,\r\n      modal: this.castModal\r\n    });\r\n  };\r\n\r\n  openSeasonModal = async seasonNum => {\r\n    this.setModalVisible({\r\n      background: this.seasonModalBackground,\r\n      modal: this.seasonModal\r\n    });\r\n    const { apiKey, tvID } = this.state;\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/tv/${tvID}/season/${seasonNum}?api_key=${apiKey}&language=en-US`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            seasonEpisodes: res.data.episodes\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { apiKey, tvID } = this.state;\r\n    this.pictureModalBackground = React.createRef();\r\n    this.pictureModal = React.createRef();\r\n    this.castModalBackground = React.createRef();\r\n    this.castModal = React.createRef();\r\n    this.seasonModalBackground = React.createRef();\r\n    this.seasonModal = React.createRef();\r\n\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/tv/${tvID}?api_key=${apiKey}&language=en-US`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            details: res.data\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1.2fr 8fr 1.2fr\"\r\n        }}\r\n      >\r\n        <PictureModal\r\n          ref={{\r\n            firstRef: this.pictureModalBackground,\r\n            secondRef: this.pictureModal\r\n          }}\r\n          posters={this.state.posters}\r\n          backdrops={this.state.backdrops}\r\n        />\r\n        <CastModal\r\n          ref={{ background: this.castModalBackground, modal: this.castModal }}\r\n          cast={this.state.cast}\r\n          crew={this.state.crew}\r\n        />\r\n\r\n        <SeasonModal\r\n          ref={{\r\n            background: this.seasonModalBackground,\r\n            modal: this.seasonModal\r\n          }}\r\n          episodes={this.state.seasonEpisodes}\r\n        />\r\n\r\n        <Overview details={this.state.details} />\r\n        <Title titleName=\"Seasons\" />\r\n        <Seasons\r\n          seriesName={this.state.details.name}\r\n          seasons={this.state.details.seasons}\r\n          open={this.openSeasonModal}\r\n        />\r\n        <Title titleName=\"Videos\" />\r\n        <Videos\r\n          isMovie={false}\r\n          apiKey={this.state.apiKey}\r\n          itemID={this.state.tvID}\r\n        />\r\n        <Title\r\n          titleName=\"Pictures\"\r\n          more={true}\r\n          onClickViewAll={this.openPictureModal}\r\n        />\r\n        <Picture\r\n          isMovie={false}\r\n          itemID={this.state.tvID}\r\n          apiKey={this.state.apiKey}\r\n          setImages={this.setImages}\r\n        />\r\n        <Title\r\n          titleName=\"Cast\"\r\n          more={true}\r\n          onClickViewAll={this.openCastModal}\r\n        />\r\n        <Cast\r\n          isMovie={false}\r\n          apiKey={this.state.apiKey}\r\n          itemID={this.state.tvID}\r\n          setCast={this.setCast}\r\n        />\r\n        <Title titleName=\"Similar tv shows\" />\r\n        <List\r\n          api={`https://api.themoviedb.org/3/tv/${this.state.tvID}/similar?api_key=${this.state.apiKey}&language=en-US&page=1`}\r\n          isMovie={false}\r\n        />\r\n        <Copyright />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tv;\r\n"]},"metadata":{},"sourceType":"module"}