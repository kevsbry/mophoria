{"ast":null,"code":"var _jsxFileName = \"P:\\\\REACT\\\\mophoria\\\\src\\\\components\\\\globalComponents\\\\List.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\n\nconst PrevBtn = props => {\n  return React.createElement(\"div\", {\n    className: \"theaters-prevBtn\",\n    onClick: props.onPrev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(NavigateBeforeIcon, {\n    className: \"theaters-prev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nconst NextBtn = props => {\n  return React.createElement(\"div\", {\n    className: \"theaters-nextBtn\",\n    onClick: props.onNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(NavigateNextIcon, {\n    className: \"theaters-next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nclass Theaters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.carouselTransformVal = 0;\n\n    this.onPrev = () => {\n      if (this.carouselTransformVal > 0) this.carouselTransformVal -= 100;\n      console.log(this.carouselTransformVal); // const carousel = document.querySelector(\".theaters-carousel-slide\");\n\n      this.carouselRef.current.style.transform = `translateX(-${this.carouselTransformVal}%)`;\n    };\n\n    this.onNext = () => {\n      this.carouselTransformVal += 100; // const carousel = document.querySelector(\".theaters-carousel-slide\");\n\n      this.carouselRef.current.style.transform = `translateX(-${this.carouselTransformVal}%)`;\n    };\n\n    this.onMovieClick = (id, isMovie) => {\n      window.location.href = isMovie ? window.origin + \"/movie/\" + id : window.origin + \"/tv/\" + id;\n    };\n\n    this.state = {\n      inTheaters: [],\n      region: \"us\"\n    };\n    this.carouselRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.movie = React.createRef();\n    await axios.get(this.props.api // `https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&region=${this.state.region}`\n    ).then(res => {\n      this.setState(() => {\n        return {\n          inTheaters: [...res.data.results]\n        };\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"theaters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.carouselRef,\n      className: \"theaters-carousel-slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.inTheaters.map(m => React.createElement(\"div\", {\n      key: m.id,\n      className: \"theaters-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w342/${m.poster_path}`,\n      alt: \"movie poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"theaters-overlay\",\n      ref: this.movie,\n      onClick: () => {\n        this.onMovieClick(m.id, this.props.isMovie);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.isMovie ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, m.title) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, m.name), this.props.isMovie && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, `(${m.release_date})`))))), React.createElement(PrevBtn, {\n      onPrev: this.onPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(NextBtn, {\n      onNext: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nTheaters.propTypes = {\n  apiKey: PropTypes.string.isRequired\n};\nexport default Theaters;","map":{"version":3,"sources":["P:/REACT/mophoria/src/components/globalComponents/List.js"],"names":["React","PropTypes","axios","NavigateNextIcon","NavigateBeforeIcon","PrevBtn","props","onPrev","NextBtn","onNext","Theaters","Component","constructor","carouselTransformVal","console","log","carouselRef","current","style","transform","onMovieClick","id","isMovie","window","location","href","origin","state","inTheaters","region","createRef","componentDidMount","movie","get","api","then","res","setState","data","results","catch","err","render","map","m","poster_path","title","name","release_date","propTypes","apiKey","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\n\r\nconst PrevBtn = props => {\r\n  return (\r\n    <div className=\"theaters-prevBtn\" onClick={props.onPrev}>\r\n      <NavigateBeforeIcon className=\"theaters-prev\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NextBtn = props => {\r\n  return (\r\n    <div className=\"theaters-nextBtn\" onClick={props.onNext}>\r\n      <NavigateNextIcon className=\"theaters-next\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Theaters extends React.Component {\r\n  carouselTransformVal = 0;\r\n\r\n  onPrev = () => {\r\n    if (this.carouselTransformVal > 0) this.carouselTransformVal -= 100;\r\n    console.log(this.carouselTransformVal);\r\n\r\n    // const carousel = document.querySelector(\".theaters-carousel-slide\");\r\n    this.carouselRef.current.style.transform = `translateX(-${this.carouselTransformVal}%)`;\r\n  };\r\n\r\n  onNext = () => {\r\n    this.carouselTransformVal += 100;\r\n    // const carousel = document.querySelector(\".theaters-carousel-slide\");\r\n    this.carouselRef.current.style.transform = `translateX(-${this.carouselTransformVal}%)`;\r\n  };\r\n\r\n  onMovieClick = (id, isMovie) => {\r\n    window.location.href = isMovie\r\n      ? window.origin + \"/movie/\" + id\r\n      : window.origin + \"/tv/\" + id;\r\n  };\r\n\r\n  state = {\r\n    inTheaters: [],\r\n    region: \"us\"\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.carouselRef = React.createRef();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.movie = React.createRef();\r\n\r\n    await axios\r\n      .get(\r\n        this.props.api\r\n        // `https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&region=${this.state.region}`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            inTheaters: [...res.data.results]\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"theaters\">\r\n        <React.Fragment>\r\n          <div ref={this.carouselRef} className=\"theaters-carousel-slide\">\r\n            {this.state.inTheaters.map(m => (\r\n              <div key={m.id} className=\"theaters-poster\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w342/${m.poster_path}`}\r\n                  alt=\"movie poster\"\r\n                />\r\n                <div\r\n                  className=\"theaters-overlay\"\r\n                  ref={this.movie}\r\n                  onClick={() => {\r\n                    this.onMovieClick(m.id, this.props.isMovie);\r\n                  }}\r\n                >\r\n                  {this.props.isMovie ? (\r\n                    <span>{m.title}</span>\r\n                  ) : (\r\n                    <span>{m.name}</span>\r\n                  )}\r\n                  {this.props.isMovie && <span>{`(${m.release_date})`}</span>}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <PrevBtn onPrev={this.onPrev} />\r\n          <NextBtn onNext={this.onNext} />\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTheaters.propTypes = {\r\n  apiKey: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Theaters;\r\n"]},"metadata":{},"sourceType":"module"}