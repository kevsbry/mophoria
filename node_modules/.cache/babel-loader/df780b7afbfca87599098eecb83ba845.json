{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\globalComponents\\\\CastModal.js\";\nimport React from \"react\";\nimport style from \"./global.module.css\";\nimport Title from \"./Title\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst ModalBackground = React.forwardRef((props, ref) => {\n  return React.createElement(\"div\", {\n    ref: ref,\n    style: {\n      position: \"fixed\",\n      width: \"100%\",\n      height: \"110vh\",\n      top: \"0px\",\n      background: \"rgba(0, 0, 0, 0.6)\",\n      zIndex: 20,\n      visibility: \"hidden\"\n    },\n    onClick: props.closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n});\n\nconst Cast = props => {\n  return React.createElement(\"div\", {\n    className: style.cast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.image !== null ? React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w185/${props.image}`,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    className: style[\"empty-image\"],\n    src: require(\"../../../src/assets/person.png\"),\n    alt: \"empty person image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: style[\"cast-description\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: style[\"cast-name\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.castName), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.character)));\n};\n\nconst CastModal = React.forwardRef((props, ref) => {\n  const {\n    cast,\n    crew\n  } = props;\n\n  const closeModal = () => {\n    const {\n      background,\n      modal\n    } = ref;\n    background.current.style.visibility = \"hidden\";\n    background.current.style.opacity = \"0\";\n    background.current.style.transition = \"all 200ms ease-in\";\n    modal.current.style.visibility = \"hidden\";\n    modal.current.style.opacity = \"0\";\n    modal.current.style.transition = \"all 200ms ease-in\";\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ModalBackground, {\n    ref: ref.background,\n    ref: ref.background,\n    closeModal: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: ref.modal,\n    className: style[\"cast-modal\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CloseIcon, {\n    className: style.closeIcon,\n    onClick: closeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Title, {\n    titleName: \"Cast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: style[\"cast-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, cast.map(c => React.createElement(Cast, {\n    key: c.cast_id,\n    image: c.profile_path,\n    castName: c.name,\n    character: c.character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))));\n});\nexport default CastModal;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/globalComponents/CastModal.js"],"names":["React","style","Title","CloseIcon","ModalBackground","forwardRef","props","ref","position","width","height","top","background","zIndex","visibility","closeModal","Cast","cast","image","require","castName","character","CastModal","crew","modal","current","opacity","transition","closeIcon","map","c","cast_id","profile_path","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport style from \"./global.module.css\";\r\nimport Title from \"./Title\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst ModalBackground = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        position: \"fixed\",\r\n        width: \"100%\",\r\n        height: \"110vh\",\r\n        top: \"0px\",\r\n        background: \"rgba(0, 0, 0, 0.6)\",\r\n        zIndex: 20,\r\n        visibility: \"hidden\"\r\n      }}\r\n      onClick={props.closeModal}\r\n    ></div>\r\n  );\r\n});\r\n\r\nconst Cast = props => {\r\n  return (\r\n    <div className={style.cast}>\r\n      {props.image !== null ? (\r\n        <img src={`https://image.tmdb.org/t/p/w185/${props.image}`} alt=\"\" />\r\n      ) : (\r\n        <img\r\n          className={style[\"empty-image\"]}\r\n          src={require(\"../../../src/assets/person.png\")}\r\n          alt=\"empty person image\"\r\n        />\r\n      )}\r\n\r\n      <div className={style[\"cast-description\"]}>\r\n        <span className={style[\"cast-name\"]}>{props.castName}</span>\r\n        <span>{props.character}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CastModal = React.forwardRef((props, ref) => {\r\n  const { cast, crew } = props;\r\n\r\n  const closeModal = () => {\r\n    const { background, modal } = ref;\r\n    background.current.style.visibility = \"hidden\";\r\n    background.current.style.opacity = \"0\";\r\n    background.current.style.transition = \"all 200ms ease-in\";\r\n\r\n    modal.current.style.visibility = \"hidden\";\r\n    modal.current.style.opacity = \"0\";\r\n    modal.current.style.transition = \"all 200ms ease-in\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalBackground\r\n        ref={ref.background}\r\n        ref={ref.background}\r\n        closeModal={closeModal}\r\n      />\r\n      <div ref={ref.modal} className={style[\"cast-modal\"]}>\r\n        <CloseIcon className={style.closeIcon} onClick={closeModal} />\r\n        <Title titleName=\"Cast\" />\r\n        <div className={style[\"cast-container\"]}>\r\n          {cast.map(c => (\r\n            <Cast\r\n              key={c.cast_id}\r\n              image={c.profile_path}\r\n              castName={c.name}\r\n              character={c.character}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default CastModal;\r\n"]},"metadata":{},"sourceType":"module"}