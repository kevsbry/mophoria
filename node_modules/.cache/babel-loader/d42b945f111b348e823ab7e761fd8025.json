{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\pages\\\\home\\\\Theaters.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\n\nconst PrevBtn = props => {\n  return React.createElement(\"div\", {\n    className: \"theaters-prevBtn\",\n    onClick: props.onPrev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(NavigateBeforeIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nconst NextBtn = props => {\n  return React.createElement(\"div\", {\n    className: \"theaters-nextBtn\",\n    onClick: props.onNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(NavigateNextIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nclass Theaters extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.carouselTransformVal = 0;\n\n    this.onPrev = () => {\n      if (this.carouselTransformVal > 0) this.carouselTransformVal -= 100;\n      console.log(this.carouselTransformVal);\n      const carousel = document.querySelector(\".theaters-carousel-slide\");\n      carousel.style.transform = `translateX(-${this.carouselTransformVal}%)`;\n    };\n\n    this.onNext = () => {\n      this.carouselTransformVal += 100;\n      const carousel = document.querySelector(\".theaters-carousel-slide\");\n      carousel.style.transform = `translateX(-${this.carouselTransformVal}%)`;\n    };\n\n    this.state = {\n      inTheaters: [],\n      region: \"us\"\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&region=${this.state.region}`).then(res => {\n      this.setState(() => {\n        return {\n          inTheaters: [...res.data.results]\n        };\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"theaters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"theaters-carousel-slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.inTheaters.map(m => React.createElement(\"div\", {\n      key: m.id,\n      className: \"theaters-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500/${m.poster_path}`,\n      alt: \"movie poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"theaters-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, m.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, `(${m.release_date})`))))), React.createElement(PrevBtn, {\n      onPrev: this.onPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(NextBtn, {\n      onNext: this.onNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nTheaters.propTypes = {\n  apiKey: PropTypes.string.isRequired\n};\nexport default Theaters;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/pages/home/Theaters.js"],"names":["React","PropTypes","axios","NavigateNextIcon","NavigateBeforeIcon","PrevBtn","props","onPrev","NextBtn","onNext","Theaters","Component","carouselTransformVal","console","log","carousel","document","querySelector","style","transform","state","inTheaters","region","componentDidMount","get","apiKey","then","res","setState","data","results","catch","err","render","map","m","id","poster_path","title","release_date","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\n\r\nconst PrevBtn = props => {\r\n  return (\r\n    <div className=\"theaters-prevBtn\" onClick={props.onPrev}>\r\n      <NavigateBeforeIcon fontSize=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NextBtn = props => {\r\n  return (\r\n    <div className=\"theaters-nextBtn\" onClick={props.onNext}>\r\n      <NavigateNextIcon fontSize=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Theaters extends React.Component {\r\n  carouselTransformVal = 0;\r\n\r\n  onPrev = () => {\r\n    if (this.carouselTransformVal > 0) this.carouselTransformVal -= 100;\r\n    console.log(this.carouselTransformVal);\r\n\r\n    const carousel = document.querySelector(\".theaters-carousel-slide\");\r\n    carousel.style.transform = `translateX(-${this.carouselTransformVal}%)`;\r\n  };\r\n\r\n  onNext = () => {\r\n    this.carouselTransformVal += 100;\r\n    const carousel = document.querySelector(\".theaters-carousel-slide\");\r\n    carousel.style.transform = `translateX(-${this.carouselTransformVal}%)`;\r\n  };\r\n\r\n  state = {\r\n    inTheaters: [],\r\n    region: \"us\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&region=${this.state.region}`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            inTheaters: [...res.data.results]\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"theaters\">\r\n        <React.Fragment>\r\n          <div className=\"theaters-carousel-slide\">\r\n            {this.state.inTheaters.map(m => (\r\n              <div key={m.id} className=\"theaters-poster\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500/${m.poster_path}`}\r\n                  alt=\"movie poster\"\r\n                />\r\n                <div className=\"theaters-overlay\">\r\n                  <span>{m.title}</span>\r\n                  <span>{`(${m.release_date})`}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <PrevBtn onPrev={this.onPrev} />\r\n          <NextBtn onNext={this.onNext} />\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTheaters.propTypes = {\r\n  apiKey: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Theaters;\r\n"]},"metadata":{},"sourceType":"module"}