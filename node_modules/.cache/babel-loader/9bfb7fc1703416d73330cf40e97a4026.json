{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\movie_tv_components\\\\Picture.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport style from \"./movie_tv.module.css\";\n\nconst PictureContainer = props => {\n  return React.createElement(\"div\", {\n    className: style[\"picture-container\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.pictures.map((p, i) => i < 4 && React.createElement(\"div\", {\n    className: style.image,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/${props.width}/${p.file_path}`,\n    alt: \"movie picture\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))));\n};\n\nclass Picture extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      backdrops: [],\n      posters: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      isMovie,\n      isPerson,\n      itemID,\n      apiKey\n    } = this.props;\n    let apiUrl = \"\";\n\n    if (isPerson === false) {\n      apiURL = isMovie ? `https://api.themoviedb.org/3/movie/${itemID}/images?api_key=${apiKey}` : `https://api.themoviedb.org/3/tv/${itemID}/images?api_key=${apiKey}`;\n    } else {\n      apiUrl = `https://api.themoviedb.org/3/person/${itemID}/images?api_key=${apiKey}`;\n    }\n\n    await axios.get(apiURL).then(res => {\n      this.setState(() => {\n        return {\n          backdrops: [...res.data.backdrops],\n          posters: [...res.data.posters]\n        };\n      });\n    }).catch(err => console.log(err));\n    this.props.setImages(this.state.posters, this.state.backdrops);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: style.picture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(PictureContainer, {\n      pictures: this.state.backdrops,\n      width: \"w780\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(PictureContainer, {\n      pictures: this.state.posters,\n      width: \"w780\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Picture;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/movie_tv_components/Picture.js"],"names":["React","Component","axios","style","PictureContainer","props","pictures","map","p","i","image","width","file_path","Picture","state","backdrops","posters","componentDidMount","isMovie","isPerson","itemID","apiKey","apiUrl","apiURL","get","then","res","setState","data","catch","err","console","log","setImages","render","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,SACE;AAAK,IAAA,SAAS,EAAEF,KAAK,CAAC,mBAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACC,QAAN,CAAeC,GAAf,CACC,CAACC,CAAD,EAAIC,CAAJ,KACEA,CAAC,GAAG,CAAJ,IACE;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACO,KAAtB;AAA6B,IAAA,GAAG,EAAED,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAG,8BAA6BJ,KAAK,CAACM,KAAM,IAAGH,CAAC,CAACI,SAAU,EADhE;AAEE,IAAA,GAAG,EAAC,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHL,CADH,CADF;AAeD,CAhBD;;AAkBA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9Ba,KAD8B,GACtB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,OAAO,EAAE;AAFH,KADsB;AAAA;;AAM9B,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA;AAA7B,QAAwC,KAAKhB,KAAnD;AACA,QAAIiB,MAAM,GAAG,EAAb;;AAEA,QAAIH,QAAQ,KAAK,KAAjB,EAAwB;AACtBI,MAAAA,MAAM,GAAGL,OAAO,GACX,sCAAqCE,MAAO,mBAAkBC,MAAO,EAD1D,GAEX,mCAAkCD,MAAO,mBAAkBC,MAAO,EAFvE;AAGD,KAJD,MAIO;AACLC,MAAAA,MAAM,GAAI,uCAAsCF,MAAO,mBAAkBC,MAAO,EAAhF;AACD;;AAED,UAAMnB,KAAK,CACRsB,GADG,CACCD,MADD,EAEHE,IAFG,CAEEC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc,MAAM;AAClB,eAAO;AACLZ,UAAAA,SAAS,EAAE,CAAC,GAAGW,GAAG,CAACE,IAAJ,CAASb,SAAb,CADN;AAELC,UAAAA,OAAO,EAAE,CAAC,GAAGU,GAAG,CAACE,IAAJ,CAASZ,OAAb;AAFJ,SAAP;AAID,OALD;AAMD,KATG,EAUHa,KAVG,CAUGC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVV,CAAN;AAYA,SAAKzB,KAAL,CAAW4B,SAAX,CAAqB,KAAKnB,KAAL,CAAWE,OAAhC,EAAyC,KAAKF,KAAL,CAAWC,SAApD;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE/B,KAAK,CAACgC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,SAAvC;AAAkD,MAAA,KAAK,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,OAAvC;AAAgD,MAAA,KAAK,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAxC6B;;AA2ChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport style from \"./movie_tv.module.css\";\r\n\r\nconst PictureContainer = props => {\r\n  return (\r\n    <div className={style[\"picture-container\"]}>\r\n      {props.pictures.map(\r\n        (p, i) =>\r\n          i < 4 && (\r\n            <div className={style.image} key={i}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/${props.width}/${p.file_path}`}\r\n                alt=\"movie picture\"\r\n              />\r\n            </div>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Picture extends Component {\r\n  state = {\r\n    backdrops: [],\r\n    posters: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { isMovie, isPerson, itemID, apiKey } = this.props;\r\n    let apiUrl = \"\";\r\n\r\n    if (isPerson === false) {\r\n      apiURL = isMovie\r\n        ? `https://api.themoviedb.org/3/movie/${itemID}/images?api_key=${apiKey}`\r\n        : `https://api.themoviedb.org/3/tv/${itemID}/images?api_key=${apiKey}`;\r\n    } else {\r\n      apiUrl = `https://api.themoviedb.org/3/person/${itemID}/images?api_key=${apiKey}`;\r\n    }\r\n\r\n    await axios\r\n      .get(apiURL)\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            backdrops: [...res.data.backdrops],\r\n            posters: [...res.data.posters]\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    this.props.setImages(this.state.posters, this.state.backdrops);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.picture}>\r\n        <PictureContainer pictures={this.state.backdrops} width=\"w780\" />\r\n        <PictureContainer pictures={this.state.posters} width=\"w780\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Picture;\r\n"]},"metadata":{},"sourceType":"module"}