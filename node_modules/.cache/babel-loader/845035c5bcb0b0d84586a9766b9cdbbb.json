{"ast":null,"code":"import _regeneratorRuntime from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/media/kevin/Projects/REACT/mophoria/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import style from\"./movies_tvs.module.css\";import axios from\"axios\";import Title from\"../../globalComponents/Title\";import Item from\"./Item\";import Filter from\"./Filter\";import Copyright from\"../../globalComponents/Copyright\";var Movies_Tvs=/*#__PURE__*/function(_React$Component){_inherits(Movies_Tvs,_React$Component);function Movies_Tvs(){var _getPrototypeOf2;var _this;_classCallCheck(this,Movies_Tvs);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Movies_Tvs)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={apiKey:\"325d84ad33eb95a5c0fc5427ba3f569a\",items:[],itemsCopy:[],initialItemsValue:[],currentTitle:\"Popular\",selectedGenreID:\"All\",selectedYear:\"All\",type:_this.props.type};_this.getYear=function(date){var str=String(date);return str.substring(0,4);};_this.onSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.target.value===\"\")){_context.next=4;break;}_this.setState(function(){return{items:_toConsumableArray(_this.state.initialItemsValue),currentTitle:\"Popular\"};});_context.next=8;break;case 4:_context.next=6;return axios.get(\"https://api.themoviedb.org/3/search/\".concat(_this.state.type,\"?api_key=\").concat(_this.state.apiKey,\"&language=en-US&page=1&include_adult=false&query=\").concat(e.target.value)).then(function(res){_this.setState(function(){return{items:_this.state.selectedYear===\"All\"?res.data.results:res.data.results.filter(function(d){return _this.getYear(d.release_date)===_this.state.selectedYear;}),currentTitle:\"Search Result\"};});}).catch(function(err){return console.log(err);});case 6://set itemsCopy after items is set to new values\n_this.setState(function(){return{itemsCopy:_toConsumableArray(_this.state.items)};});//filter search result based on selected genre\n_this.onChangeGenre(_this.state.selectedGenreID);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.onChangeGenre=function(genre){if(genre!==_this.state.selectedGenreID){_this.setState(function(){return{selectedGenreID:genre};});}var items=_this.state.items;var newItems=[];if(String(genre)!==\"All\"){for(var i=0;i<items.length;i++){for(var genre_id=0;genre_id<items[i].genre_ids.length;genre_id++){if(items[i].genre_ids[genre_id]===parseInt(genre)){newItems.push(items[i]);}}}_this.setState(function(){return{items:[].concat(newItems)};});}else{_this.setState(function(){return{items:_toConsumableArray(_this.state.itemsCopy)};});}};_this.onChangeYear=function(year){if(year!==_this.state.selectedYear){_this.setState(function(){return{selectedYear:year};});}if(year!==\"All\"){_this.setState(function(){return{items:_this.state.items.filter(function(item){return _this.getYear(item.release_date)===year;})};});}else{_this.setState(function(){return{items:_this.state.itemsCopy};});}};return _this;}_createClass(Movies_Tvs,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this2=this;var _this$state,type,apiKey;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_this$state=this.state,type=_this$state.type,apiKey=_this$state.apiKey;//initial items\n_context2.next=3;return axios.get(\"https://api.themoviedb.org/3/\".concat(type,\"/popular?api_key=\").concat(apiKey,\"&language=en-US&page=1\")).then(function(res){_this2.setState(function(){return{items:res.data.results,itemsCopy:res.data.results,initialItemsValue:res.data.results};});}).catch(function(err){return console.log(err);});case 3:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this$state2=this.state,currentTitle=_this$state2.currentTitle,items=_this$state2.items,type=_this$state2.type;return React.createElement(\"div\",{className:style.movies},React.createElement(Filter,{apiKey:this.state.apiKey,onSearch:this.onSearch,onChangeGenre:this.onChangeGenre,onChangeYear:this.onChangeYear}),React.createElement(Title,{titleName:currentTitle}),React.createElement(\"div\",{className:style[\"items-container\"]},items.map(function(item,i){return React.createElement(Item,{key:item.id,item:item,type:type,itemNum:i});})),React.createElement(Copyright,null));}}]);return Movies_Tvs;}(React.Component);export default Movies_Tvs;","map":{"version":3,"sources":["/media/kevin/Projects/REACT/mophoria/src/components/pages/movies_tvs/Movies_Tvs.js"],"names":["React","style","axios","Title","Item","Filter","Copyright","Movies_Tvs","state","apiKey","items","itemsCopy","initialItemsValue","currentTitle","selectedGenreID","selectedYear","type","props","getYear","date","str","String","substring","onSearch","e","target","value","setState","get","then","res","data","results","filter","d","release_date","catch","err","console","log","onChangeGenre","genre","newItems","i","length","genre_id","genre_ids","parseInt","push","onChangeYear","year","item","movies","map","id","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport style from \"./movies_tvs.module.css\";\r\nimport axios from \"axios\";\r\nimport Title from \"../../globalComponents/Title\";\r\nimport Item from \"./Item\";\r\nimport Filter from \"./Filter\";\r\nimport Copyright from \"../../globalComponents/Copyright\";\r\n\r\nclass Movies_Tvs extends React.Component {\r\n  state = {\r\n    apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\r\n    items: [],\r\n    itemsCopy: [],\r\n    initialItemsValue: [],\r\n    currentTitle: \"Popular\",\r\n    selectedGenreID: \"All\",\r\n    selectedYear: \"All\",\r\n    type: this.props.type\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { type, apiKey } = this.state;\r\n    //initial items\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/${type}/popular?api_key=${apiKey}&language=en-US&page=1`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            items: res.data.results,\r\n            itemsCopy: res.data.results,\r\n            initialItemsValue: res.data.results\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getYear = date => {\r\n    let str = String(date);\r\n    return str.substring(0, 4);\r\n  };\r\n\r\n  // SEARCH AND FILTER ONSEARCH\r\n  onSearch = async e => {\r\n    //change items on search\r\n    if (e.target.value === \"\") {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.initialItemsValue],\r\n          currentTitle: \"Popular\"\r\n        };\r\n      });\r\n    } else {\r\n      await axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/${this.state.type}?api_key=${this.state.apiKey}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n        )\r\n        .then(res => {\r\n          this.setState(() => {\r\n            return {\r\n              items:\r\n                this.state.selectedYear === \"All\"\r\n                  ? res.data.results\r\n                  : res.data.results.filter(\r\n                      d =>\r\n                        this.getYear(d.release_date) === this.state.selectedYear\r\n                    ),\r\n              currentTitle: \"Search Result\"\r\n            };\r\n          });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      //set itemsCopy after items is set to new values\r\n      this.setState(() => {\r\n        return {\r\n          itemsCopy: [...this.state.items]\r\n        };\r\n      });\r\n\r\n      //filter search result based on selected genre\r\n      this.onChangeGenre(this.state.selectedGenreID);\r\n    }\r\n  };\r\n\r\n  //FILTERS !\r\n  onChangeGenre = genre => {\r\n    if (genre !== this.state.selectedGenreID) {\r\n      this.setState(() => {\r\n        return {\r\n          selectedGenreID: genre\r\n        };\r\n      });\r\n    }\r\n\r\n    const { items } = this.state;\r\n    let newItems = [];\r\n\r\n    if (String(genre) !== \"All\") {\r\n      for (let i = 0; i < items.length; i++) {\r\n        for (\r\n          let genre_id = 0;\r\n          genre_id < items[i].genre_ids.length;\r\n          genre_id++\r\n        ) {\r\n          if (items[i].genre_ids[genre_id] === parseInt(genre)) {\r\n            newItems.push(items[i]);\r\n          }\r\n        }\r\n      }\r\n      this.setState(() => {\r\n        return {\r\n          items: [...newItems]\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.itemsCopy]\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeYear = year => {\r\n    if (year !== this.state.selectedYear) {\r\n      this.setState(() => {\r\n        return {\r\n          selectedYear: year\r\n        };\r\n      });\r\n    }\r\n\r\n    if (year !== \"All\") {\r\n      this.setState(() => {\r\n        return {\r\n          items: this.state.items.filter(\r\n            item => this.getYear(item.release_date) === year\r\n          )\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          items: this.state.itemsCopy\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { currentTitle, items, type } = this.state;\r\n\r\n    return (\r\n      <div className={style.movies}>\r\n        <Filter\r\n          apiKey={this.state.apiKey}\r\n          onSearch={this.onSearch}\r\n          onChangeGenre={this.onChangeGenre}\r\n          onChangeYear={this.onChangeYear}\r\n        />\r\n        <Title titleName={currentTitle} />\r\n        <div className={style[\"items-container\"]}>\r\n          {items.map((item, i) => (\r\n            <Item key={item.id} item={item} type={type} itemNum={i} />\r\n          ))}\r\n        </div>\r\n\r\n        <Copyright />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies_Tvs;\r\n"]},"metadata":{},"sourceType":"module"}