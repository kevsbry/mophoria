{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\pages\\\\movies_tvs\\\\Movies.js\";\nimport React from \"react\";\nimport style from \"./movies_tvs.module.css\";\nimport axios from \"axios\";\nimport Title from \"../../globalComponents/Title\";\nimport Item from \"./Item\";\nimport Filter from \"./Filter\";\n\nclass Movies extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\n      items: [],\n      itemsCopy: [],\n      initialItemsValue: [],\n      currentTitle: \"Popular\",\n      selectedGenreID: \"All\",\n      selectedYear: \"All\",\n      type: \"movie\"\n    };\n\n    this.getYear = date => {\n      let str = String(date);\n      return str.substring(0, 4);\n    };\n\n    this.onSearch = async e => {\n      //change items on search\n      if (e.target.value === \"\") {\n        this.setState(() => {\n          return {\n            items: [...this.state.initialItemsValue]\n          };\n        });\n      } else {\n        await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${this.state.apiKey}&language=en-US&page=1&include_adult=false&query=${e.target.value}`).then(res => {\n          this.setState(() => {\n            return {\n              items: this.state.selectedYear === \"All\" ? res.data.results : res.data.results.filter(d => this.getYear(d.release_date) === this.state.selectedYear),\n              currentTitle: \"Search result\"\n            };\n          });\n        }).catch(err => console.log(err)); //set itemsCopy after items is set to new values\n\n        this.setState(() => {\n          return {\n            itemsCopy: [...this.state.items]\n          };\n        }); //filter search result based on selected genre\n\n        this.onChangeGenre(this.state.selectedGenreID);\n      }\n    };\n\n    this.onChangeGenre = genre => {\n      if (genre !== this.state.selectedGenreID) {\n        this.setState(() => {\n          return {\n            selectedGenreID: genre\n          };\n        });\n      }\n\n      const {\n        items\n      } = this.state;\n      let newItems = [];\n\n      if (String(genre) !== \"All\") {\n        for (let i = 0; i < items.length; i++) {\n          for (let genre_id = 0; genre_id < items[i].genre_ids.length; genre_id++) {\n            if (items[i].genre_ids[genre_id] === parseInt(genre)) {\n              newItems.push(items[i]);\n            }\n          }\n        }\n\n        this.setState(() => {\n          return {\n            items: [...newItems]\n          };\n        });\n      } else {\n        this.setState(() => {\n          return {\n            items: [...this.state.itemsCopy]\n          };\n        });\n      }\n    };\n\n    this.onChangeYear = year => {\n      if (year !== this.state.selectedYear) {\n        this.setState(() => {\n          return {\n            selectedYear: year\n          };\n        });\n      }\n\n      if (year !== \"All\") {\n        this.setState(() => {\n          return {\n            items: this.state.items.filter(item => this.getYear(item.release_date) === year)\n          };\n        });\n      } else {\n        this.setState(() => {\n          return {\n            items: this.state.itemsCopy\n          };\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      apiKey\n    } = this.state; //initial items\n\n    await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`).then(res => {\n      this.setState(() => {\n        return {\n          items: res.data.results,\n          itemsCopy: res.data.results,\n          initialItemsValue: res.data.results\n        };\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      currentTitle,\n      items,\n      type\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: style.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      apiKey: this.state.apiKey,\n      onSearch: this.onSearch,\n      onChangeGenre: this.onChangeGenre,\n      onChangeYear: this.onChangeYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Title, {\n      titleName: currentTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: style[\"items-container\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, items.map((item, i) => React.createElement(Item, {\n      key: item.id,\n      item: item,\n      type: type,\n      itemNum: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/pages/movies_tvs/Movies.js"],"names":["React","style","axios","Title","Item","Filter","Movies","Component","state","apiKey","items","itemsCopy","initialItemsValue","currentTitle","selectedGenreID","selectedYear","type","getYear","date","str","String","substring","onSearch","e","target","value","setState","get","then","res","data","results","filter","d","release_date","catch","err","console","log","onChangeGenre","genre","newItems","i","length","genre_id","genre_ids","parseInt","push","onChangeYear","year","item","componentDidMount","render","movies","map","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport style from \"./movies_tvs.module.css\";\r\nimport axios from \"axios\";\r\nimport Title from \"../../globalComponents/Title\";\r\nimport Item from \"./Item\";\r\nimport Filter from \"./Filter\";\r\n\r\nclass Movies extends React.Component {\r\n  state = {\r\n    apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\r\n    items: [],\r\n    itemsCopy: [],\r\n    initialItemsValue: [],\r\n    currentTitle: \"Popular\",\r\n    selectedGenreID: \"All\",\r\n    selectedYear: \"All\",\r\n    type: \"movie\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { apiKey } = this.state;\r\n    //initial items\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            items: res.data.results,\r\n            itemsCopy: res.data.results,\r\n            initialItemsValue: res.data.results\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  getYear = date => {\r\n    let str = String(date);\r\n    return str.substring(0, 4);\r\n  };\r\n\r\n  // SEARCH AND FILTER ONSEARCH\r\n  onSearch = async e => {\r\n    //change items on search\r\n    if (e.target.value === \"\") {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.initialItemsValue]\r\n        };\r\n      });\r\n    } else {\r\n      await axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=${this.state.apiKey}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n        )\r\n        .then(res => {\r\n          this.setState(() => {\r\n            return {\r\n              items:\r\n                this.state.selectedYear === \"All\"\r\n                  ? res.data.results\r\n                  : res.data.results.filter(\r\n                      d =>\r\n                        this.getYear(d.release_date) === this.state.selectedYear\r\n                    ),\r\n              currentTitle: \"Search result\"\r\n            };\r\n          });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      //set itemsCopy after items is set to new values\r\n      this.setState(() => {\r\n        return {\r\n          itemsCopy: [...this.state.items]\r\n        };\r\n      });\r\n\r\n      //filter search result based on selected genre\r\n      this.onChangeGenre(this.state.selectedGenreID);\r\n    }\r\n  };\r\n\r\n  //FILTERS !\r\n  onChangeGenre = genre => {\r\n    if (genre !== this.state.selectedGenreID) {\r\n      this.setState(() => {\r\n        return {\r\n          selectedGenreID: genre\r\n        };\r\n      });\r\n    }\r\n\r\n    const { items } = this.state;\r\n    let newItems = [];\r\n\r\n    if (String(genre) !== \"All\") {\r\n      for (let i = 0; i < items.length; i++) {\r\n        for (\r\n          let genre_id = 0;\r\n          genre_id < items[i].genre_ids.length;\r\n          genre_id++\r\n        ) {\r\n          if (items[i].genre_ids[genre_id] === parseInt(genre)) {\r\n            newItems.push(items[i]);\r\n          }\r\n        }\r\n      }\r\n      this.setState(() => {\r\n        return {\r\n          items: [...newItems]\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.itemsCopy]\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeYear = year => {\r\n    if (year !== this.state.selectedYear) {\r\n      this.setState(() => {\r\n        return {\r\n          selectedYear: year\r\n        };\r\n      });\r\n    }\r\n\r\n    if (year !== \"All\") {\r\n      this.setState(() => {\r\n        return {\r\n          items: this.state.items.filter(\r\n            item => this.getYear(item.release_date) === year\r\n          )\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          items: this.state.itemsCopy\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { currentTitle, items, type } = this.state;\r\n\r\n    return (\r\n      <div className={style.movies}>\r\n        <Filter\r\n          apiKey={this.state.apiKey}\r\n          onSearch={this.onSearch}\r\n          onChangeGenre={this.onChangeGenre}\r\n          onChangeYear={this.onChangeYear}\r\n        />\r\n        <Title titleName={currentTitle} />\r\n        <div className={style[\"items-container\"]}>\r\n          {items.map((item, i) => (\r\n            <Item key={item.id} item={item} type={type} itemNum={i} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}