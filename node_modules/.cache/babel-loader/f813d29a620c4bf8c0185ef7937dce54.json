{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go\\\\src\\\\github.com\\\\kevsbry\\\\react projects\\\\mophoria\\\\src\\\\components\\\\pages\\\\movies_tvs\\\\Movies.js\";\nimport React from \"react\";\nimport style from \"./movies_tvs.module.css\";\nimport axios from \"axios\";\nimport Title from \"../../globalComponents/Title\";\nimport Item from \"./Item\";\nimport Filter from \"./Filter\";\n\nclass Movies extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\n      items: [],\n      itemsCopy: [],\n      initialItemsValue: [],\n      selectedGenreID: 0,\n      type: \"movie\"\n    };\n\n    this.onSearch = async e => {\n      //change items on search\n      if (e.target.value === \"\") {\n        this.setState(() => {\n          return {\n            items: [...this.state.initialItemsValue]\n          };\n        });\n        this.onChangeGenre(this.state.selectedGenreID, true);\n      } else {\n        await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${this.state.apiKey}&language=en-US&page=1&include_adult=false&query=${e.target.value}`).then(res => {\n          this.setState(() => {\n            return {\n              items: res.data.results,\n              itemsCopy: res.data.results\n            };\n          });\n        }).catch(err => console.log(err)); //filter search result based on selected genre\n\n        this.onChangeGenre(this.state.selectedGenreID, false);\n      }\n    };\n\n    this.onChangeGenre = (genre, isInputEmpty) => {\n      if (genre !== this.state.selectedGenreID) {\n        this.setState(() => {\n          return {\n            selectedGenreID: genre\n          };\n        });\n      }\n\n      const {\n        items\n      } = this.state;\n      let newItems = [];\n\n      if (String(genre) !== \"All\") {\n        for (let i = 0; i < items.length; i++) {\n          for (let genre_id = 0; genre_id < items[i].genre_ids.length; genre_id++) {\n            if (items[i].genre_ids[genre_id] === parseInt(genre)) {\n              newItems.push(items[i]);\n            }\n          }\n        }\n\n        this.setState(() => {\n          return {\n            items: [...newItems]\n          };\n        });\n      } else if (String(genre) === \"All\" && isInputEmpty === false) {\n        this.setState(() => {\n          return {\n            items: [...this.state.itemsCopy]\n          };\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      apiKey\n    } = this.state; //initial items\n\n    await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`).then(res => {\n      this.setState(() => {\n        return {\n          items: res.data.results,\n          initialItemsValue: res.data.results\n        };\n      });\n    }).catch(err => console.log(err));\n    console.log(this.state.items);\n  }\n\n  render() {\n    const {\n      items,\n      type\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: style.movies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Title, {\n      titleName: \"Search movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Filter, {\n      apiKey: this.state.apiKey,\n      onSearch: this.onSearch,\n      onChangeGenre: this.onChangeGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: style[\"items-container\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, items.map((item, i) => React.createElement(Item, {\n      key: item.id,\n      item: item,\n      type: type,\n      itemNum: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/kevin/go/src/github.com/kevsbry/react projects/mophoria/src/components/pages/movies_tvs/Movies.js"],"names":["React","style","axios","Title","Item","Filter","Movies","Component","state","apiKey","items","itemsCopy","initialItemsValue","selectedGenreID","type","onSearch","e","target","value","setState","onChangeGenre","get","then","res","data","results","catch","err","console","log","genre","isInputEmpty","newItems","String","i","length","genre_id","genre_ids","parseInt","push","componentDidMount","render","movies","map","item","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport style from \"./movies_tvs.module.css\";\r\nimport axios from \"axios\";\r\nimport Title from \"../../globalComponents/Title\";\r\nimport Item from \"./Item\";\r\nimport Filter from \"./Filter\";\r\n\r\nclass Movies extends React.Component {\r\n  state = {\r\n    apiKey: \"325d84ad33eb95a5c0fc5427ba3f569a\",\r\n    items: [],\r\n    itemsCopy: [],\r\n    initialItemsValue: [],\r\n    selectedGenreID: 0,\r\n    type: \"movie\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { apiKey } = this.state;\r\n    //initial items\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\r\n      )\r\n      .then(res => {\r\n        this.setState(() => {\r\n          return {\r\n            items: res.data.results,\r\n            initialItemsValue: res.data.results\r\n          };\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    console.log(this.state.items);\r\n  }\r\n\r\n  onSearch = async e => {\r\n    //change items on search\r\n    if (e.target.value === \"\") {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.initialItemsValue]\r\n        };\r\n      });\r\n      this.onChangeGenre(this.state.selectedGenreID, true);\r\n    } else {\r\n      await axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=${this.state.apiKey}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n        )\r\n        .then(res => {\r\n          this.setState(() => {\r\n            return {\r\n              items: res.data.results,\r\n              itemsCopy: res.data.results\r\n            };\r\n          });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n      //filter search result based on selected genre\r\n      this.onChangeGenre(this.state.selectedGenreID, false);\r\n    }\r\n  };\r\n\r\n  onChangeGenre = (genre, isInputEmpty) => {\r\n    if (genre !== this.state.selectedGenreID) {\r\n      this.setState(() => {\r\n        return {\r\n          selectedGenreID: genre\r\n        };\r\n      });\r\n    }\r\n\r\n    const { items } = this.state;\r\n    let newItems = [];\r\n\r\n    if (String(genre) !== \"All\") {\r\n      for (let i = 0; i < items.length; i++) {\r\n        for (\r\n          let genre_id = 0;\r\n          genre_id < items[i].genre_ids.length;\r\n          genre_id++\r\n        ) {\r\n          if (items[i].genre_ids[genre_id] === parseInt(genre)) {\r\n            newItems.push(items[i]);\r\n          }\r\n        }\r\n      }\r\n      this.setState(() => {\r\n        return {\r\n          items: [...newItems]\r\n        };\r\n      });\r\n    } else if (String(genre) === \"All\" && isInputEmpty === false) {\r\n      this.setState(() => {\r\n        return {\r\n          items: [...this.state.itemsCopy]\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { items, type } = this.state;\r\n\r\n    return (\r\n      <div className={style.movies}>\r\n        <Title titleName=\"Search movies\" />\r\n        <Filter\r\n          apiKey={this.state.apiKey}\r\n          onSearch={this.onSearch}\r\n          onChangeGenre={this.onChangeGenre}\r\n        />\r\n        <div className={style[\"items-container\"]}>\r\n          {items.map((item, i) => (\r\n            <Item key={item.id} item={item} type={type} itemNum={i} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}